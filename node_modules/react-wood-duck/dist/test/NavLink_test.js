(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', '../NavLink.js', 'react-dom/test-utils'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('../NavLink.js'), require('react-dom/test-utils'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.NavLink, global.testUtils);
    global.NavLink_test = mod.exports;
  }
})(this, function (_react, _NavLink, _testUtils) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _NavLink2 = _interopRequireDefault(_NavLink);

  var _testUtils2 = _interopRequireDefault(_testUtils);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  describe('NavLink', function () {
    var navLinkHref = 'test.html';
    var navLinkText = 'Nav Link Test';
    var navLinkClass = 'navlink';
    var preIconClass = 'fa fa-user';
    var postIconClass = 'fa icon-warning-sign';
    var indentationLevel = 2;

    var activeNavLinkClassName = 'active-navlink';
    var inactiveNavLinkClassName = 'inactive-navlink';

    describe('basic navlink', function () {
      var inactiveBasicNavLink = _testUtils2.default.renderIntoDocument(_react2.default.createElement(_NavLink2.default, {
        href: navLinkHref,
        text: navLinkText,
        indentationLevel: indentationLevel,
        active: false,
        onClick: function onClick() {}
      }));

      it('has li element', function () {
        expect(inactiveBasicNavLink).not.toBe(null);
        expect(_testUtils2.default.isCompositeComponent(inactiveBasicNavLink, _NavLink2.default)).toBe(true);
        var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(inactiveBasicNavLink, 'li');
        expect(liElement).not.toBe(null);
        expect(liElement.className).toBe(navLinkClass);
        expect(liElement.children.length).toBe(2);
      });

      it('has anchor element', function () {
        var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(inactiveBasicNavLink, 'li');
        var anchorElement = liElement.children[1];
        expect(anchorElement.tagName).toBe('A');
        expect(anchorElement.textContent).toBe(navLinkText);
        expect(anchorElement.href).toContain(navLinkHref);
        expect(anchorElement.className).toBe('');
        expect(anchorElement.onClick).not.toBe(null);
      });

      it('has span element with inactive class name and valid indentation style', function () {
        var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(inactiveBasicNavLink, 'li');
        var spanElement = liElement.children[0];
        expect(spanElement.tagName).toBe('SPAN');
        expect(spanElement.className).toBe(inactiveNavLinkClassName);
        expect(spanElement.style.cssText).toBe('margin-right: 6rem;');
      });

      it('does not have pre & post icon elements', function () {
        var iElements = _testUtils2.default.scryRenderedDOMComponentsWithTag(inactiveBasicNavLink, 'i');
        expect(iElements.length).toBe(0);
      });
    });

    describe('navlink with pre icon property', function () {
      var navLinkWithPreIcon = _testUtils2.default.renderIntoDocument(_react2.default.createElement(_NavLink2.default, { href: navLinkHref, text: navLinkText, preIcon: preIconClass }));
      var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(navLinkWithPreIcon, 'li');

      it('has basic element', function () {
        expect(_testUtils2.default.isCompositeComponent(navLinkWithPreIcon, _NavLink2.default)).toBe(true);
        expect(liElement.children.length).toBe(3);
        expect(liElement.children[0].tagName).toBe('SPAN');
        expect(liElement.children[2].tagName).toBe('A');
      });

      it('navlink has pre icon', function () {
        expect(_testUtils2.default.isCompositeComponent(navLinkWithPreIcon, _NavLink2.default)).toBe(true);
        expect(liElement.children.length).toBe(3);
        var preIconElement = liElement.children[1];
        expect(preIconElement.tagName).toBe('I');
        expect(preIconElement.className).toBe(preIconClass);
      });
    });

    describe('navlink with post icon property', function () {
      var navLinkWithPostIcon = _testUtils2.default.renderIntoDocument(_react2.default.createElement(_NavLink2.default, { href: navLinkHref, text: navLinkText, postIcon: postIconClass }));
      var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(navLinkWithPostIcon, 'li');

      it('has basic elements', function () {
        expect(_testUtils2.default.isCompositeComponent(navLinkWithPostIcon, _NavLink2.default)).toBe(true);
        expect(liElement.children.length).toBe(3);
        expect(liElement.children[0].tagName).toBe('SPAN');
        expect(liElement.children[1].tagName).toBe('A');
      });

      it('has post icon', function () {
        var postIconElement = liElement.children[2];
        expect(postIconElement.className).toContain(postIconClass);
      });
    });

    describe('navlink with pre & post icons', function () {
      var navLinkWithPrePostIcons = _testUtils2.default.renderIntoDocument(_react2.default.createElement(_NavLink2.default, {
        href: navLinkHref,
        text: navLinkText,
        preIcon: preIconClass,
        postIcon: postIconClass
      }));
      var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(navLinkWithPrePostIcons, 'li');

      it('has basic elements', function () {
        expect(liElement.children[0].tagName).toBe('SPAN');
        expect(liElement.children[2].tagName).toBe('A');
      });

      it('has pre & post icons', function () {
        expect(_testUtils2.default.isCompositeComponent(navLinkWithPrePostIcons, _NavLink2.default)).toBe(true);
        expect(liElement.children.length).toBe(4);
        expect(liElement.children[1].tagName).toBe('I');
        expect(liElement.children[1].className).toBe(preIconClass);
        expect(liElement.children[3].tagName).toBe('I');
        expect(liElement.children[3].className).toContain(postIconClass);
      });
    });

    describe('navlink with child components', function () {
      var navLinkWithChildren = _testUtils2.default.renderIntoDocument(_react2.default.createElement(
        _NavLink2.default,
        { href: navLinkHref, text: navLinkText },
        _react2.default.createElement(
          'div',
          null,
          'Test Child'
        )
      ));
      var liElement = _testUtils2.default.findRenderedDOMComponentWithTag(navLinkWithChildren, 'li');

      it('has basic elements', function () {
        expect(liElement.children.length).toBe(3);
        expect(liElement.children[0].tagName).toBe('SPAN');
        expect(liElement.children[1].tagName).toBe('A');
      });

      it('has given child components', function () {
        expect(liElement.children[2].tagName).toBe('DIV');
      });
    });

    describe('navlink with preIcon & active properties', function () {
      var activeNavLinkWithPreIcon = _testUtils2.default.renderIntoDocument(_react2.default.createElement(_NavLink2.default, {
        href: navLinkHref,
        text: navLinkText,
        preIcon: preIconClass,
        active: true
      }));

      it('has basic elements with active style', function () {
        expect(_testUtils2.default.findRenderedDOMComponentWithClass(activeNavLinkWithPreIcon, activeNavLinkClassName)).toBeTruthy();
      });
    });
  });
});