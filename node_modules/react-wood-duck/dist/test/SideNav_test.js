(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'react-dom/lib/ReactTestUtils', '../SideNav', '../NavLinksContainer'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('react-dom/lib/ReactTestUtils'), require('../SideNav'), require('../NavLinksContainer'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.ReactTestUtils, global.SideNav, global.NavLinksContainer);
    global.SideNav_test = mod.exports;
  }
})(this, function (_react, _ReactTestUtils, _SideNav, _NavLinksContainer) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _ReactTestUtils2 = _interopRequireDefault(_ReactTestUtils);

  var _SideNav2 = _interopRequireDefault(_SideNav);

  var _NavLinksContainer2 = _interopRequireDefault(_NavLinksContainer);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  describe('Side Nav', function () {
    var simpleNavLinks = [{
      type: 'navLinks',
      navItems: [{
        type: 'navLink',
        text: 'Tommy Cambell',
        href: '#',
        preIcon: 'fa fa-user'
      }, {
        type: 'navLink',
        text: 'Aubrey Cambell',
        href: '#',
        preIcon: 'fa fa-user'
      }, {
        type: 'navLink',
        text: 'Chris Cambell',
        href: '#',
        preIcon: 'fa fa-user'
      }]
    }];
    var renderer = _ReactTestUtils2.default.createRenderer();
    var sideNavWithnavigationLinksresultTag = null;

    beforeEach(function () {
      renderer.render(_react2.default.createElement(_SideNav2.default, { content: simpleNavLinks }));
      sideNavWithnavigationLinksresultTag = renderer.getRenderOutput();
    });

    it('returns side nav element given valid content', function () {
      expect(sideNavWithnavigationLinksresultTag.type).toBe('div');
      expect(sideNavWithnavigationLinksresultTag.props.className).toBe('container hidden-xs col-md-3 side-nav');
      expect(sideNavWithnavigationLinksresultTag.props['aria-label']).toBe('Side Nav');
    });

    it('returns side nav element with a bunch of navigation links given content with navigation links details', function () {
      expect(sideNavWithnavigationLinksresultTag.props.children.length).toBe(1);
      expect(sideNavWithnavigationLinksresultTag.props.children[0].type).toBe('div');
      expect(sideNavWithnavigationLinksresultTag.props.children[0].props.className).toBe('row');
      expect(sideNavWithnavigationLinksresultTag.props.children[0]).toEqual(_react2.default.createElement(
        'div',
        {
          className: 'row',
          key: 0,
          role: 'navigation',
          'aria-label': 'Main Content Navigation Menu'
        },
        _react2.default.createElement(_NavLinksContainer2.default, { navLinks: simpleNavLinks[0].navItems })
      ));
    });

    it('returns navigation links with proper accessibility tags given content with navigation links details', function () {
      expect(sideNavWithnavigationLinksresultTag.props.children[0].props['aria-label']).toBe('Main Content Navigation Menu');
      expect(sideNavWithnavigationLinksresultTag.props.children[0].props.role).toBe('navigation');
    });

    it('returns side nav element with default column width when columnWidth is not provided', function () {
      renderer.render(_react2.default.createElement(_SideNav2.default, { content: simpleNavLinks }));
      var resultTag = renderer.getRenderOutput();
      expect(resultTag.props.className).toContain('col-md-3');
    });

    it('returns side nav element with specified column width', function () {
      renderer.render(_react2.default.createElement(_SideNav2.default, { content: simpleNavLinks, columnWidth: 4 }));
      var resultTag = renderer.getRenderOutput();
      expect(resultTag.props.className).toContain('col-md-4');
    });
  });
});